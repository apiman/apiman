<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="urn:io.apiman.test:2014:02:testPlan" version="1.0"
  xmlns:tns="urn:io.apiman.test:2014:02:testPlan" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified">

  <!-- 
  /*
   * Copyright 2014 JBoss Inc
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *      http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
   -->

  <xsd:element name="testPlan">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="testGroup" type="tns:testGroupType" minOccurs="1" maxOccurs="unbounded" />
      </xsd:sequence>
      <xsd:attribute name="name" type="xsd:string" use="required" />
      <xsd:attribute name="endpoint" type="xsd:string" use="optional" />
    </xsd:complexType>
  </xsd:element>


  <xsd:complexType name="testGroupType">
    <xsd:sequence>
      <xsd:element name="test" type="tns:testType" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required" />
    <xsd:attribute name="endpoint" type="xsd:string" use="optional" />
  </xsd:complexType>


  <xsd:complexType name="testType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="name" type="xsd:string" use="required" />
        <xsd:attribute name="endpoint" type="xsd:string" use="optional" />
        <xsd:attribute name="delay" type="xsd:integer" use="optional" />
        <xsd:attribute name="skipStorage" type="xsd:string" use="optional" />
        <!--
        For assertions against stuff that might be async such as notifications, let client retry a few times to let backend catch up.
        Beware, this might have side effects if the endpoint is not idempotent.
        -->
        <xsd:attribute name="maxRetries" type="xsd:positiveInteger" default="0"/>
        <xsd:attribute name="retryDelay" type="xsd:positiveInteger" default="1000"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

</xsd:schema>

# Remote maven repositories to use when looking for plugins.  Comma separated
# list of URLs.
apiman.plugins.repositories=https://repo1.maven.org/maven2/,http://repository.jboss.org/nexus/content/groups/public/
apiman-manager.plugins.registries=https://cdn.jsdelivr.net/gh/apiman/apiman-plugin-registry@master/registry.json

# Apiman Manager logging. standard, json or a FQDN implementing IApimanLogger
apiman-manager.config.logger=standard

# Apiman Manager secret key for data encryption
#apiman.encrypter.type=io.apiman.common.util.crypt.AesDataEncrypter
#apiman.encrypter.secretKey=

# ---------------------------------------------------------------------
# The datasource for all Apiman Gateway components (JDBC)
# ---------------------------------------------------------------------
apiman-gateway.jdbc.jndi-location=java:jboss/datasources/apiman-gateway


# ---------------------------------------------------------------------
# The following are settings for using elasticsearch for various
# apiman components.
# ---------------------------------------------------------------------
#apiman.es.client.type=es
#apiman.es.protocol=http
#apiman.es.initialize=true
#apiman.es.host=localhost
#apiman.es.port=19200
#apiman.es.username=
#apiman.es.password=
#apiman.es.timeout=10000
#apiman.es.pollingTime=60
#apiman.es.keystore.path=
#apiman.es.keystore.password=
#apiman.es.truststore.path=
#apiman.es.truststore.password=
#apiman.es.allowSelfSigned=
#apiman.es.allowAnyHost=

# ---------------------------------------------------------------------
# Some hibernate settings only useful when JPA is the storage.type.
# ---------------------------------------------------------------------
apiman.hibernate.connection.datasource=java:/apiman/datasources/apiman-manager
apiman.hibernate.dialect=io.apiman.manager.api.jpa.ApimanH2Dialect
apiman.hibernate.hbm2ddl.auto=validate

# How the API Manager UI authenticates to the API Manager REST services
apiman-manager-ui.api.authentication.type=bearerToken
apiman-manager-ui.api.authentication.token.generator=io.apiman.manager.ui.server.kc.KeyCloakBearerTokenGenerator

# Set cross origin for the manager; *=any, comma separated names
apiman-manager-ui.allowed-cors-origins=*

# Security context settings.
apiman-manager.security-context.type=keycloak

# Set the option to only allow Admins to create orgs to (false)
apiman-manager.config.features.org-create-admin-only=false
apiman-manager-ui.org-create-admin-only=false

# Set the option to true if the response of the manager rest api should contain stacktraces
apiman-manager.config.features.rest-response-should-contain-stacktraces=false

# Enable or disable the Apiman notifications subsystem.
apiman-manager.config.notifications.enable=true

# API Manager storage settings.
apiman-manager.storage.type=jpa
apiman-manager.storage.jpa.initialize=true

#apiman-manager.storage.type=es
#apiman-manager.storage.es.client.type=${apiman.es.client.type}
#apiman-manager.storage.es.client.protocol=${apiman.es.protocol}
#apiman-manager.storage.es.client.host=${apiman.es.host}
#apiman-manager.storage.es.client.port=${apiman.es.port}
#apiman-manager.storage.es.client.username=${apiman.es.username}
#apiman-manager.storage.es.client.password=${apiman.es.password}
#apiman-manager.storage.es.client.timeout=${apiman.es.timeout}
#apiman-manager.storage.es.client.pollingTime=${apiman.es.pollingTime}
#apiman-manager.storage.es.client.initialize=${apiman.es.initialize}
#apiman-manager.storage.es.client.keystore.path=${apiman.es.keystore.path}
#apiman-manager.storage.es.client.keystore.password=${apiman.es.keystore.password}
#apiman-manager.storage.es.client.truststore.path=${apiman.es.truststore.path}
#apiman-manager.storage.es.client.truststore.password=${apiman.es.truststore.password}
#apiman-manager.storage.es.client.allowSelfSigned=${apiman.es.allowSelfSigned}
#apiman-manager.storage.es.client.allowAnyHost=${apiman.es.allowAnyHost}

# API Manager metrics settings.
apiman-manager.metrics.type=io.apiman.manager.api.jdbc.JdbcMetricsAccessor
apiman-manager.metrics.datasource.jndi-location=${apiman-gateway.jdbc.jndi-location}

#apiman-manager.metrics.type=es
#apiman-manager.metrics.es.client.type=${apiman.es.client.type}
#apiman-manager.metrics.es.client.protocol=${apiman.es.protocol}
#apiman-manager.metrics.es.client.host=${apiman.es.host}
#apiman-manager.metrics.es.client.port=${apiman.es.port}
#apiman-manager.metrics.es.client.username=${apiman.es.username}
#apiman-manager.metrics.es.client.password=${apiman.es.password}
#apiman-manager.metrics.es.client.timeout=${apiman.es.timeout}
#apiman-manager.metrics.es.client.pollingTime=${apiman.es.pollingTime}
#apiman-manager.metrics.es.client.keystore.path=${apiman.es.keystore.path}
#apiman-manager.metrics.es.client.keystore.password=${apiman.es.keystore.password}
#apiman-manager.metrics.es.client.truststore.path=${apiman.es.truststore.path}
#apiman-manager.metrics.es.client.truststore.password=${apiman.es.truststore.password}
#apiman-manager.metrics.es.client.allowSelfSigned=$eapiman.es.allowSelfSigned}
#apiman-manager.metrics.es.client.allowAnyHost=${apiman.es.allowAnyHost}

# API Manager API Catalog
apiman-manager.api-catalog.type=io.apiman.manager.api.core.catalog.JsonApiCatalog
apiman-manager.api-catalog.catalog-url=https://cdn.jsdelivr.net/gh/apiman/apiman-api-catalog@master/catalog.json


# API Gateway components
apiman-gateway.plugin-registry=io.apiman.gateway.engine.impl.DefaultPluginRegistry
apiman-gateway.plugin-registry.pluginsDir=${jboss.server.data.dir}/apiman/plugins
apiman-gateway.plugin-registry.pluginRepositories=${apiman.plugins.repositories}
apiman-gateway.connector-factory=io.apiman.gateway.platforms.servlet.connectors.HttpConnectorFactory
apiman-gateway.policy-factory=io.apiman.gateway.engine.policy.PolicyFactoryImpl
apiman-gateway.policy-factory.reloadSnapshots=false
apiman-gateway.logger-factory=io.apiman.common.logging.impl.NoOpLoggerFactory
apiman-gateway.components.IPolicyFailureFactoryComponent=io.apiman.gateway.platforms.servlet.PolicyFailureFactoryComponent
apiman-gateway.components.IBufferFactoryComponent=io.apiman.gateway.engine.impl.ByteBufferFactoryComponent

# Gateway error writer
# A "trace" version of the error writer - comment out/remove this to suppress stack traces
# in the JSON/XML payload returned by the gateway when an error occurs.
apiman-gateway.writers.error=io.apiman.gateway.engine.impl.TracePolicyErrorWriter

# ---------------------------------------------------------------------
# Connector factory options
# - timeouts are in seconds
# ---------------------------------------------------------------------
apiman-gateway.connector-factory.http.timeouts.read=30
apiman-gateway.connector-factory.http.timeouts.write=30
apiman-gateway.connector-factory.http.timeouts.connect=10
apiman-gateway.connector-factory.http.followRedirects=true

# ---------------------------------------------------------------------
# Metrics Settings
# ---------------------------------------------------------------------

apiman-gateway.metrics=io.apiman.gateway.engine.jdbc.JdbcMetrics
apiman-gateway.metrics.datasource.jndi-location=${apiman-gateway.jdbc.jndi-location}

#apiman-gateway.metrics=io.apiman.gateway.engine.es.EsMetrics
#apiman-gateway.metrics.client.type=es
#apiman-gateway.metrics.client.protocol=${apiman.es.protocol}
#apiman-gateway.metrics.client.host=${apiman.es.host}
#apiman-gateway.metrics.client.port=${apiman.es.port}
#apiman-gateway.metrics.client.initialize=${apiman.es.initialize}
#apiman-gateway.metrics.client.username=${apiman.es.username}
#apiman-gateway.metrics.client.password=${apiman.es.password}
#apiman-gateway.metrics.client.timeout=${apiman.es.timeout}
#apiman-gateway.metrics.es.client.pollingTime=${apiman.es.pollingTime}
#apiman-gateway.metrics.client.keystore.path=${apiman.es.keystore.path}
#apiman-gateway.metrics.client.keystore.password=${apiman.es.keystore.password}
#apiman-gateway.metrics.client.truststore.path=${apiman.es.truststore.path}
#apiman-gateway.metrics.client.truststore.password=${apiman.es.truststore.password}
#apiman-gateway.metrics.client.allowSelfSigned=${apiman.es.allowSelfSigned}
#apiman-gateway.metrics.client.allowAnyHost=${apiman.es.allowAnyHost}

# ---------------------------------------------------------------------
# SSL/TLS settings for the gateway connector(s).
# ---------------------------------------------------------------------

# Enable devMode for HTTPS connections (gateway trusts any certificate).
# This should *NOT* be used in production mode. *Use with great care.*
apiman-gateway.connector-factory.tls.devMode=true

# Trust store contains certificate(s) trusted by gateway.
#apiman-gateway.connector-factory.tls.trustStore=<PATH_TO_TRUST_STORE>
#apiman-gateway.connector-factory.tls.trustStorePassword=<PASSWORD_IF_ANY>

# Key store contains gateway's keys (including private components: keep it safe).
#apiman-gateway.connector-factory.tls.keyStore=<PATH_TO_KEY_STORE>
#apiman-gateway.connector-factory.tls.keyStorePassword=<PASSWORD_IF_ANY> # Password on key store as a whole
#apiman-gateway.connector-factory.tls.keyPassword=<PASSWORD_IF_ANY> # Password on specific key(s)
# By default all keys can be used (will try all). If alias list provided, will only attempt to use listed keys.
#apiman-gateway.connector-factory.tls.keyAliases=<COMMA_SEPARATED_LIST>

# Allowed TLS/SSL protocols and ciphers suites as CSV. Availability will vary depending on your JVM impl.
# Uses JVM defaults depending if not explicitly provided.
# See: https://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html
# You may wish to consider global JVM settings by modifying java.security
#apiman-gateway.connector-factory.tls.allowedProtocols=TLSv1.2\,TLSv1.1
#apiman-gateway.connector-factory.tls.disallowedProtocols=SSLv1\,SSLv2
#apiman-gateway.connector-factory.tls.allowedCiphers=TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
#apiman-gateway.connector-factory.tls.disallowedCiphers=RC4

# Whether certificate host checks should be bypassed. *Use with great care.*
#apiman-gateway.connector-factory.tls.allowAnyHost=false

# Whether self-signed certificates should be automatically trusted. *Use with great care.*
#apiman-gateway.connector-factory.tls.allowSelfSigned=false

# ---------------------------------------------------------------------
# Registry Settings
# ---------------------------------------------------------------------

apiman-gateway.registry=io.apiman.gateway.engine.jdbc.PollCachingJdbcRegistry
apiman-gateway.registry.datasource.jndi-location=${apiman-gateway.jdbc.jndi-location}
apiman-gateway.registry.cache-polling-interval=15

apiman-gateway.initializers=jdbc
apiman-gateway.initializers.jdbc=io.apiman.gateway.engine.jdbc.JdbcInitializer
apiman-gateway.initializers.jdbc.datasource.jndi-location=${apiman-gateway.jdbc.jndi-location}
apiman-gateway.initializers.jdbc.datasource.type=h2

#apiman-gateway.registry=io.apiman.gateway.engine.es.PollCachingEsRegistry
#apiman-gateway.registry.client.type=${apiman.es.client.type}
#apiman-gateway.registry.client.protocol=${apiman.es.protocol}
#apiman-gateway.registry.client.host=${apiman.es.host}
#apiman-gateway.registry.client.port=${apiman.es.port}
#apiman-gateway.registry.client.initialize=${apiman.es.initialize}
#apiman-gateway.registry.client.username=${apiman.es.username}
#apiman-gateway.registry.client.password=${apiman.es.password}
#apiman-gateway.registry.client.timeout=${apiman.es.timeout}
#apiman-gateway.registry.client.pollingTime=${apiman.es.pollingTime}
#apiman-gateway.registry.client.keystore.path=${apiman.es.keystore.path}
#apiman-gateway.registry.client.keystore.password=${apiman.es.keystore.password}
#apiman-gateway.registry.client.truststore.path=${apiman.es.truststore.path}
#apiman-gateway.registry.client.truststore.password=${apiman.es.truststore.password}
##apiman-gateway.registry.cache-polling-interval=15
#apiman-gateway.registry.client.allowSelfSigned=${apiman.es.allowSelfSigned}
#apiman-gateway.registry.client.allowAnyHost=${apiman.es.allowAnyHost}

# ---------------------------------------------------------------------
# Shared State Component Settings
# ---------------------------------------------------------------------

apiman-gateway.components.ISharedStateComponent=io.apiman.gateway.engine.impl.InMemorySharedStateComponent

#apiman-gateway.components.ISharedStateComponent=io.apiman.gateway.engine.es.EsSharedStateComponent
#apiman-gateway.components.ISharedStateComponent.client.type=${apiman.es.client.type}
#apiman-gateway.components.ISharedStateComponent.client.protocol=${apiman.es.protocol}
#apiman-gateway.components.ISharedStateComponent.client.host=${apiman.es.host}
#apiman-gateway.components.ISharedStateComponent.client.port=${apiman.es.port}
#apiman-gateway.components.ISharedStateComponent.client.initialize=${apiman.es.initialize}
#apiman-gateway.components.ISharedStateComponent.client.username=${apiman.es.username}
#apiman-gateway.components.ISharedStateComponent.client.password=${apiman.es.password}
#apiman-gateway.components.ISharedStateComponent.client.timeout=${apiman.es.timeout}
#apiman-gateway.components.ISharedStateComponent.client.pollingTime=${apiman.es.pollingTime}
#apiman-gateway.components.ISharedStateComponent.client.keystore.path=${apiman.es.keystore.path}
#apiman-gateway.components.ISharedStateComponent.client.keystore.password=${apiman.es.keystore.password}
#apiman-gateway.components.ISharedStateComponent.client.truststore.path=${apiman.es.truststore.path}
#apiman-gateway.components.ISharedStateComponent.client.truststore.password=${apiman.es.truststore.password}
#apiman-gateway.components.ISharedStateComponent.client.allowSelfSigned=${apiman.es.allowSelfSigned}
#apiman-gateway.components.ISharedStateComponent.client.allowAnyHost=${apiman.es.allowAnyHost}


# ---------------------------------------------------------------------
# Rate Limiter Component Settings
# ---------------------------------------------------------------------

apiman-gateway.components.IRateLimiterComponent=io.apiman.gateway.engine.impl.InMemoryRateLimiterComponent

#apiman-gateway.components.IRateLimiterComponent=io.apiman.gateway.engine.es.EsRateLimiterComponent
#apiman-gateway.components.IRateLimiterComponent.client.type=${apiman.es.client.type}
#apiman-gateway.components.IRateLimiterComponent.client.protocol=${apiman.es.protocol}
#apiman-gateway.components.IRateLimiterComponent.client.host=${apiman.es.host}
#apiman-gateway.components.IRateLimiterComponent.client.port=${apiman.es.port}
#apiman-gateway.components.IRateLimiterComponent.client.initialize=${apiman.es.initialize}
#apiman-gateway.components.IRateLimiterComponent.client.username=${apiman.es.username}
#apiman-gateway.components.IRateLimiterComponent.client.password=${apiman.es.password}
#apiman-gateway.components.IRateLimiterComponent.client.timeout=${apiman.es.timeout}
#apiman-gateway.components.IRateLimiterComponent.client.polling.time=${apiman.es.polling.time}
#apiman-gateway.components.IRateLimiterComponent.client.keystore.path=${apiman.es.keystore.path}
#apiman-gateway.components.IRateLimiterComponent.client.keystore.password=${apiman.es.keystore.password}
#apiman-gateway.components.IRateLimiterComponent.client.truststore.path=${apiman.es.truststore.path}
#apiman-gateway.components.IRateLimiterComponent.client.truststore.password=${apiman.es.truststore.password}
#apiman-gateway.components.IRateLimiterComponent.client.allowSelfSigned=${apiman.es.allowSelfSigned}
#apiman-gateway.components.IRateLimiterComponent.client.allowAnyHost=${apiman.es.allowAnyHost}

# ---------------------------------------------------------------------
# Cache Store Component Settings
# ---------------------------------------------------------------------

apiman-gateway.components.ICacheStoreComponent=io.apiman.gateway.engine.impl.InMemoryCacheStoreComponent

#apiman-gateway.components.ICacheStoreComponent=io.apiman.gateway.engine.es.EsCacheStoreComponent
#apiman-gateway.components.ICacheStoreComponent.client.type=${apiman.es.client.type}
#apiman-gateway.components.ICacheStoreComponent.client.protocol=${apiman.es.protocol}
#apiman-gateway.components.ICacheStoreComponent.client.host=${apiman.es.host}
#apiman-gateway.components.ICacheStoreComponent.client.port=${apiman.es.port}
#apiman-gateway.components.ICacheStoreComponent.client.initialize=${apiman.es.initialize}
#apiman-gateway.components.ICacheStoreComponent.client.username=${apiman.es.username}
#apiman-gateway.components.ICacheStoreComponent.client.password=${apiman.es.password}
#apiman-gateway.components.ICacheStoreComponent.client.timeout=${apiman.es.timeout}
#apiman-gateway.components.ICacheStoreComponent.client.polling.time=${apiman.es.polling.time}
#apiman-gateway.components.ICacheStoreComponent.client.keystore.path=${apiman.es.keystore.path}
#apiman-gateway.components.ICacheStoreComponent.client.keystore.password=${apiman.es.keystore.password}
#apiman-gateway.components.ICacheStoreComponent.client.truststore.path=${apiman.es.truststore.path}
#apiman-gateway.components.ICacheStoreComponent.client.truststore.password=${apiman.es.truststore.password}
#apiman-gateway.components.ICacheStoreComponent.client.allowSelfSigned=${apiman.es.allowSelfSigned}
#apiman-gateway.components.ICacheStoreComponent.client.allowAnyHost=${apiman.es.allowAnyHost}

# ---------------------------------------------------------------------
# Execute Blocking Component Settings
# ---------------------------------------------------------------------
io.apiman.gateway.engine.components.IExecuteBlockingComponent=io.apiman.gateway.engine.impl.DefaultExecuteBlockingComponent

# ---------------------------------------------------------------------
# JDBC Component Settings
# ---------------------------------------------------------------------
apiman-gateway.components.IJdbcComponent=io.apiman.gateway.engine.impl.DefaultJdbcComponent

# ---------------------------------------------------------------------
# LDAP Component Settings
# ---------------------------------------------------------------------
apiman-gateway.components.ILdapComponent=io.apiman.gateway.engine.impl.DefaultLdapComponent

# ---------------------------------------------------------------------
# HTTP Client Component Settings
# ---------------------------------------------------------------------
apiman-gateway.components.IHttpClientComponent=io.apiman.gateway.platforms.servlet.components.HttpClientComponentImpl

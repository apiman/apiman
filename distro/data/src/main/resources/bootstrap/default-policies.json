{
  "Metadata": {
    "exportedOn": "2020-08-11T12:01:00Z",
    "apimanVersion": "${version}"
  },
  "PolicyDefinitions": [
    {
      "id" : "AuthorizationPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.AuthorizationPolicy",
      "name" : "Authorization Policy",
      "description" : "Enables fine grained authorization to API resources based on authenticated user roles.",
      "icon" : "users",
      "templates" : [ {
        "template" : "Appropriate authorization roles are required.  There are ${rules.size()} authorization rules defined."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "BASICAuthenticationPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.BasicAuthenticationPolicy",
      "name" : "BASIC Authentication Policy",
      "description" : "Enables HTTP BASIC Authentication on an API.  Some configuration required.",
      "icon" : "lock",
      "templates" : [ {
        "template" : "Access to the API is protected by BASIC Authentication through the '${realm}' authentication realm.  @if{forwardIdentityHttpHeader != null}Successfully authenticated requests will forward the authenticated identity to the back end API via the '${forwardIdentityHttpHeader}' custom HTTP header.@end{}"
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "CachingResourcesPolicy",
      "name" : "Caching Resources Policy",
      "description" : "Allows caching of API responses in the Gateway to reduce overall traffic to the back-end API.",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.CachingResourcesPolicy",
      "icon" : "hdd-o",
      "templates" : [
        {
          "language" : null,
          "template" : "API responses will be cached for @{ttl} seconds."
        }
      ]
    }, {
      "id" : "IPBlacklistPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.IPBlacklistPolicy",
      "name" : "IP Blocklist Policy",
      "description" : "Requests that originate from a specified set of valid IP addresses will be denied access.",
      "icon" : "thumbs-down",
      "templates" : [ {
        "template" : "Requests that originate from the set of ${ipList.size()} configured IP address(es) will be denied access to the managed API."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "IPWhitelistPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.IPWhitelistPolicy",
      "name" : "IP Allowlist Policy",
      "description" : "Only requests that originate from a specified set of valid IP addresses will be allowed through.",
      "icon" : "filter",
      "templates" : [ {
        "template" : "Only requests that originate from the set of ${ipList.size()} configured IP address(es) will be allowed to invoke the managed API."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "IgnoredResourcesPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.IgnoredResourcesPolicy",
      "name" : "Ignored Resources Policy",
      "description" : "Requests satisfying the provided regular expression will be ignored.",
      "icon" : "eye-slash",
      "templates" : [ {
        "template" : "Requests matching any of the ${rules.size()} regular expressions provided will receive a 404 error code."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "QuotaPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.QuotaPolicy",
      "name" : "Quota Policy",
      "description" : "Provides a way to limit the total number of requests that can be sent to an API.",
      "icon" : "exchange",
      "templates" : [ {
        "template" : "Consumers cannot exceed their quota of ${limit} requests per ${granularity} per ${period}."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "RateLimitingPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.RateLimitingPolicy",
      "name" : "Rate Limiting Policy",
      "description" : "Enforces rate configurable request rate limits on an API.  This ensures that consumers can't overload an API with too many requests.",
      "icon" : "sliders",
      "templates" : [ {
        "template" : "Consumers are limited to ${limit} requests per ${granularity} per ${period}."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "TimeRestrictedAccessPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.TimeRestrictedAccessPolicy",
      "name" : "Time Restricted Access Policy",
      "description" : "Requests matching the specified regular expression and made within the specified time period will be ignored.",
      "icon" : "clock-o",
      "templates" : [ {
        "template" : "Requests matching the regular expression and made outside the specified time period will receive a 423 error code."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "TransferQuotaPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.TransferQuotaPolicy",
      "name" : "Transfer Quota Policy",
      "description" : "Provides a way to limit the total number of bytes that can be transferred from (or to) an API.",
      "icon" : "download",
      "templates" : [ {
        "template" : "Consumers are limited to transferring ${limit} bytes per ${granularity} per ${period}."
      } ],
      "formType" : "Default",
      "deleted" : false
    }, {
      "id" : "URLRewritingPolicy",
      "policyImpl" : "class:io.apiman.gateway.engine.policies.URLRewritingPolicy",
      "name" : "URL Rewriting Policy",
      "description" : "Responses from the back-end API will be modified by fixing up any incorrect URLs found with modified ones.  This is useful because apiman works through an API Gateway.",
      "icon" : "pencil-square",
      "templates" : [ {
        "template" : "Requests and/or responses will be modified by finding all text matching regular expression '${fromRegex}' with '${toReplacement}'."
      } ],
      "formType" : "Default",
      "deleted" : false
    }
  ]
}

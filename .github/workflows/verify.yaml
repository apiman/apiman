name: Verify Build Workflow
on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'CODE_OF_CONDUCT*'
    branches: [3.x]
  pull_request:
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - 'CODE_OF_CONDUCT*'
    branches: [3.x]

jobs:
  build-verify:
    name: Verify Build
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Apiman'
    strategy:
      matrix:
        java: [ 11, 17 ]
        integration-suite:
          # Default, empty string to avoid setting
          - name: Default configuration (JPA)
            command: " "
          # Servlet elasticsearch
          - name: Servlet with Elasticsearch gateway
            command: -Dapiman.gateway-test.config=servlet-es
          # Vert.x in-memory gateway
          - name: Vert.x with in-memory registry
            command: -Dapiman.gateway-test.config=vertx3-mem
          # Vert.x elasticsearch
          - name: Vert.x with Elasticsearch registry
            command: -Dapiman.gateway-test.config=vertx3-es

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Project (including /parent)
        run: ./fastbuild.sh

      - name: Run platform-specific integration tests (${{ matrix.integration-suite.name }})
        run: ./mvnw test install -Dinvoker.skip -Dmaven.javadoc.skip=true -B ${{ matrix.integration-suite.command }}

      - name: Publish Test Report
        if: ${{ always() }}
        uses: mikepenz/action-junit-report@v2.4.3
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'

  e2e:
    name: Cypress end-to-end testing      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11 (for deploying assets, docker builds, etc)
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Build latest docker image locally & run Cypress
        run: |
          cd manager/ui/war
          yarn install --frozen-lockfile
          yarn apiman:rebuild
          yarn ci
        env: 
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
